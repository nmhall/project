allAIs = dumbAI:dumbAI mediumAI:mediumAI smartAI:smartAI;

dumbAI = 'Short' '{' singleAI:singleAI '}';
mediumAI = 'Int' '{' singleAI:singleAI '}';
smartAI = 'Double' '{' singleAI:singleAI '}';

singleAI = formationDef:formationDef movementDef:movementDef targetingDef:targetingDef;

formationDef = 'Formation' '{' [formationRules:formationRules] '}';

movementDef = 'Movement' '{' [movementRules:movementRules] '}';

targetingDef = 'Targeting' '{' [targetingRules:targetingRules] '}';

formationRules = [extraFormationRules:extraFormationRules] 'default:'
                 defaultFormation:formation;

movementRules = [extraMovementRules:extraMovementRules] 'default:'
                defaultMovement:movement;

targetingRules = [extraTargetingRules:extraTargetingRules] 'default:'
                 defaultTargeting:targeting;

extraFormationRules = {formationRule:formationRule}+;

extraMovementRules = {movementRule:movementRule}+;

extraTargetingRules = {targetingRule:targetingRule}+;

formationRule = conditional:conditional ':' formation:formation;

movementRule = conditional:conditional ':' movement:movement;

targetingRule = conditional:conditional ':' targeting:targeting;

formation = 'tight formation' | 'loose formation' | 'isolation';

movement = 'move toward' | 'move away' | 'hold ground';

targeting = 'target closest' | 'target farthest' | 'target lowest health'
            | 'target smartest' | 'target highest range';

conditional = 'if' condition:condition [extraConditions];

extraConditions = 'and' condition:condition [extraConditions];

condition = enemyProximity:enemyProximity | allyProximity:allyProximity |
            myHealth:myHealth | enemyIQ:enemyIQ | enemyHealth:enemyHealth |
            enemyRange:enemyRange;

enemyProximity = 'there are' number:number 'enemies' proximity:proximity;

allyProximity = 'there are' number:number 'allies' proximity:proximity;

proximity = 'adjacent' | 'close' | 'around';

myHealth = 'health' comparison:comparison number:number;

enemyIQ = 'a nearby enemy has IQ' comparison:comparison number:number;

enemyHealth = 'a nearby enemy has health' comparison:comparison number:number;

enemyRange = 'a nearby enemy has range' comparison:comparison number:number;

comparison = '<' | '>';

number = /[0-9]+/;
